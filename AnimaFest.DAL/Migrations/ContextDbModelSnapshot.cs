// <auto-generated />
using System;
using AnimaFest.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimaFest.DAL.Migrations
{
    [DbContext(typeof(ContextDb))]
    partial class ContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimaFest.DAL.Models.Alocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CidadeAlugadaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinalAlugada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicialAlugada")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("PagoEmGasolina")
                        .HasColumnType("real");

                    b.Property<float>("QuantKMRodado")
                        .HasMaxLength(200)
                        .HasColumnType("real");

                    b.Property<float>("ValorTotalAlugado")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CidadeAlugadaId");

                    b.ToTable("Alocacaoes");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Gasolina", b =>
                {
                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2");

                    b.Property<float>("PrecoPorLitro")
                        .HasColumnType("real");

                    b.HasKey("DataInsercao");

                    b.ToTable("Gasolinas");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlocacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoGastoId")
                        .HasColumnType("int");

                    b.Property<float>("ValorGastado")
                        .HasMaxLength(200)
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AlocacaoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlocacaoId")
                        .HasColumnType("int");

                    b.Property<bool>("Alugavel")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float?>("PrecoMedioAluguel")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AlocacaoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.TipoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TipoGastos");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Alocacao", b =>
                {
                    b.HasOne("AnimaFest.DAL.Models.Cidade", "CidadeAlugada")
                        .WithMany()
                        .HasForeignKey("CidadeAlugadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CidadeAlugada");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Gasto", b =>
                {
                    b.HasOne("AnimaFest.DAL.Models.Alocacao", null)
                        .WithMany("GastosAlocacao")
                        .HasForeignKey("AlocacaoId");

                    b.HasOne("AnimaFest.DAL.Models.Produto", null)
                        .WithMany("GastosProduto")
                        .HasForeignKey("ProdutoId");

                    b.HasOne("AnimaFest.DAL.Models.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Produto", b =>
                {
                    b.HasOne("AnimaFest.DAL.Models.Alocacao", null)
                        .WithMany("Produtos")
                        .HasForeignKey("AlocacaoId");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Alocacao", b =>
                {
                    b.Navigation("GastosAlocacao");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("AnimaFest.DAL.Models.Produto", b =>
                {
                    b.Navigation("GastosProduto");
                });
#pragma warning restore 612, 618
        }
    }
}
